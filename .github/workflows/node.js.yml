name: Node.js CI - Tests Only

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        cypress-version: [13.15.0]

    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Cache server dependencies
      - name: Cache server dependencies
        uses: actions/cache@v3
        with:
          path: server/node_modules
          key: server-node-modules-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('server/package.json') }}
          restore-keys: |
            server-node-modules-${{ runner.os }}-${{ matrix.node-version }}-

      # Set up Node.js for the server (backend)
      - name: Setup Node.js for server
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # Install server dependencies
      - name: Install server dependencies
        run: |
          cd server
          yarn install

      # Run server tests
      - name: Run server tests
        run: |
          cd server
          yarn test

      # Start server in the background
      - name: Start server
        run: |
          cd server
          nohup yarn start &

      # Cache client dependencies
      - name: Cache client dependencies
        uses: actions/cache@v3
        with:
          path: client/node_modules
          key: client-node-modules-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('client/package.json') }}
          restore-keys: |
            client-node-modules-${{ runner.os }}-${{ matrix.node-version }}-

      # Set up Node.js for the client (frontend)
      - name: Setup Node.js for client
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # Install client dependencies and Cypress version
      - name: Install client dependencies
        run: |
          cd client
          yarn install
          yarn add cypress@${{ matrix.cypress-version }}

      # Start client in the background
      - name: Start client
        run: |
          cd client
          nohup yarn start &

      # Wait for the applications to be ready
      - name: Wait for applications to be ready
        run: |
          # Wait for server and client to be accessible
          until curl -s http://localhost:5000 > /dev/null; do echo "Waiting for server..."; sleep 5; done
          until curl -s http://localhost:3000 > /dev/null; do echo "Waiting for client..."; sleep 5; done

      # Run Cypress component tests
      - name: Run Cypress component tests
        run: |
          cd client
          yarn cypress:run:component

      # Run Cypress end-to-end tests
      - name: Run Cypress end-to-end tests
        run: |
          cd client
          yarn cypress:run:e2e

